
pipeline {
    agent any

    tools {
        maven 'Maven' //the value must be the same as in the Web UI
    }

    environment {
        ANSIBLE_SERVER_ADDRESS = "3.78.221.162" // ubuntu distro
    }

    stages {
        stage("Copy all the necessary files to Ansible Control Node") {
            steps {
                script {
                    dir("Module_15-Configuration_management_with_Ansible") {
                        sshagent(credentials: ['ansible-connection']) {
                        sh "scp -o StrictHostKeyChecking=no ansible.cfg deploy-docker-from-jenkins.yaml inventory_aws_ec2.yaml ubuntu@${ANSIBLE_SERVER_ADDRESS}:/home/ubuntu"
                        withCredentials([sshUserPrivateKey(credentialsId: "managed-ec2", keyFileVariable: "keyfile", usernameVariable: "user")]) {
                                sh "scp \$keyfile ubuntu@${ANSIBLE_SERVER_ADDRESS}:/home/ubuntu/ssh-key-temp.pem"
                                sh "ssh ubuntu@${ANSIBLE_SERVER_ADDRESS} 'mv ssh-key-temp.pem ssh-key.pem && rm -f ssh-key-temp.pem'"
                            }
                        }
                    }
                }
            }
        }

        stage("Execute ansible playbook") {
            steps {
                script {
                    def remote = [:]
                    remote.name = "ansible-control-node"
                    remote.host = "${env.ANSIBLE_SERVER_ADDRESS}"
                    remote.allowAnyHosts = true

                    withCredentials([sshUserPrivateKey(credentialsId: 'ansible-connection', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
                        remote.user = userName
                        remote.identityFile = identity
                        sh("echo ${remote}")
                        sshCommand remote: remote, command: 'for i in {1..5}; do echo -n \"Loop \$i \"; date ; sleep 1; done'
                    }
                }
            }
        }
    }   
}